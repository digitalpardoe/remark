<%= error_messages_for(@article) %>

<%= markitup(f, [:body, :excerpt], :toggle => 'text_filter') %>
<%= datetime(f, :published_at) %>

<script type="text/javascript">
  Remark.elementToggler( { "link" : ".link-post", "article" : ".article-post" }, ".btn-group.form-actions", function(buttons) {
    if ($("#article_url").val().length > 0) {
      $(configuration["link"]).show();
    } else if ($("#article_body").val().length > 0) {
      $(configuration["article"]).show();
    } else {
      $(buttons).show();
    }
  });
</script>

<div class="btn-group form-actions">
  <button class="btn link">Post Link</button>
  <button class="btn article">Write Article</button>
</div>

<div class="link-post article-post">
  <%= f.label :title %>
  <%= f.text_field :title, :placeholder => "Example Title", :class => "input-xxlarge" %>
</div>

<div class="link-post">
  <%= f.label :url %>
  <%= f.text_field :url, :placeholder => "http://example.com/", :class => "input-xxlarge" %>
</div>

<div class="link-post article-post">
  <%= f.label :composite_tags, "Tags" %>
  <%= f.text_field :composite_tags, :placeholder => "Add, Some, Tags, Here", :class => "input-xlarge" %>

  <%= f.label :text_filter %>
  <%= f.select :text_filter, TEXT_FILTERS.collect { |tf| [tf[:human_readable], tf[:name]] }, {:selected => f.object.text_filter ? f.object.text_filter : setting(:text_filter)} %>
  <span class="help-inline">Changing this will change the editing mode of the fields below.</span>
</div>

<div class="article-post">
  <%= f.label :body, "Content" %>
  <%= f.text_area :body %>
</div>

<div class="link-post article-post">
  <%= f.label :excerpt %>
  <%= f.text_area :excerpt %>

  <%= f.label :permalink %>
  <%= f.text_field :permalink, :placeholder => 'generated-or-fill-me-in', :class => "input-xlarge" %>

  <%= f.label :published_at, "Published" %>
  <%= f.text_field :published_at, :value => (@article.published_at || Time.now.utc).zoned.to_s(:datetime) %>
  <span class="help-inline">Set a future date to delay publishing.</span>

  <%= f.label :draft, ("Draft " + (f.check_box :draft)).html_safe, :class => "checkbox" %>

  <div class="form-actions">
    <%= f.submit "Save", :class => ["btn", "btn-primary"] %>
  </div>
</div>
